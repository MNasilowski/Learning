% XOR input for x1 and x2
M = csvread('Entry.csv');
input = M(:,1:2);
% Desired output of XOR
output = M(:,3);
%input = [ 0 0; 1 1 ; % wejscia sieci
%0 1; 1 0 ];
%output = [ 0; 0; 1; 1 ]; % zadane wyjscie sieci
iterations = 2000;
% Initialize the bias
% wspólczynnik krzywizny
p = 50;
wyn = rand(p,p);
bety = 1:p;
wspucz = 1:p;
for j = 1:p
    b = j*0.1;
    bety(j) = b;
% Learning coefficient
for k = 1:2*p
    coeff = k*0.1; 
    wspucz(k) = coeff;
% Number of learning iterations
% Calculate weights randomly using seed.
a1 = 0; a2 = 0; a3 = 0; a4 = 0;
for i = 0: 25
W = tworz(input,output,coeff, b ,iterations);
a1 = a1 + dzialaj(W,[0 0],b);
a2 = a2 + dzialaj(W,[0 1],b);
a3 = a3 + dzialaj(W,[1 0],b);
a4 = a4 + dzialaj(W,[1 1],b);
end
skutecznosc =( 50 + a2 + a3 - a1 - a4)*0.01;
wyn(j,k) = skutecznosc;
end
end